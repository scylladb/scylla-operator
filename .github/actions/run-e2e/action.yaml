name: "Run E2E"
description: "Runs E2E test suite"
inputs:
  repositoryPath:
    description: "Path to where the project code lives"
    required: true
  jobSuffix:
    description: "E2E job suffix"
    required: true
  suite:
    description: "E2E suite name"
    required: true
  featureGates:
    description: "FeatureGate string"
    required: false
    default: ""
  extraArgs:
    description: "Extra arguments for the E2E binary"
    required: false
    default: ""
  baseTimeoutMinutes:
    description: "Default timeout in minutes. Can be extended to accommodate for flake retries."
    required: false
    default: 60
runs:
  using: "composite"
  steps:
  - name: Prepare E2E environment
    uses: ./go/src/github.com/scylladb/scylla-operator/.github/actions/prepare-e2e-env
    with:
      repositoryPath: ${{ inputs.repositoryPath }}
      goVersion: ${{ env.go_version }}
      artifactsDir: ${{ runner.temp }}/e2e-artifacts

  - name: Tweak node and Kubernetes
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      # Label nodes with label required by e2e tests.
      kubectl label nodes scylla.scylladb.com/node-type=scylla --all
      
      # Increase sysctl required by ScyllaDB
      echo 'fs.aio-max-nr = 300000000' | sudo tee /etc/sysctl.d/90-scylla.conf >/dev/null
      
      sudo sysctl --system
  
  - name: Deploy scylla-operator
    shell: bash
    working-directory: ${{ inputs.repositoryPath }}
    env:
      SCYLLA_OPERATOR_FEATURE_GATES: '${{ inputs.featureGates }}'
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      timeout 10m ./hack/ci-deploy.sh '${{ env.image_repo_ref }}:ci'
      
      # Raise loglevel in CI.
      # TODO: Replace it with ScyllaOperatorConfig field when available.
      kubectl -n scylla-operator patch deployment/scylla-operator --type=json -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--loglevel=4"}]'
      kubectl -n scylla-operator rollout status deployment/scylla-operator
      kubectl -n scylla-manager patch deployment/scylla-manager-controller --type=json -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--loglevel=4"}]'
      kubectl -n scylla-manager rollout status deployment/scylla-manager-controller
      
      kubectl get pods -A
  
  - name: Run e2e
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit
      
      e2e_timeout_minutes='${{ inputs.baseTimeoutMinutes }}'
      flake_attempts=0
      if [[ -v 'FLAKE_ATTEMPTS' ]]; then
        flake_attempts="${FLAKE_ATTEMPTS}"
        e2e_timeout_minutes="$(( ${e2e_timeout_minutes} + ${flake_attempts} * 10 ))"
      fi
      
      user="$( id -u )"
      group="$( id -g )"
      
      ingress_class_name='haproxy'
      ingress_custom_annotations='haproxy.org/ssl-passthrough=true'
      ingress_controller_address="$( kubectl -n haproxy-ingress get svc haproxy-ingress --template='{{ .spec.clusterIP }}' ):9142"
      
      sudo timeout "$(( ${e2e_timeout_minutes} + 5 ))m" podman run --user="${user}:${group}" --rm \
      --entrypoint=/usr/bin/scylla-operator-tests \
      -v="${ARTIFACTS_DIR}:${ARTIFACTS_DIR}:rw" \
      -v="${HOME}/.kube/config:/kubeconfig:ro" -e='KUBECONFIG=/kubeconfig' \
      '${{ env.image_repo_ref }}:ci' \
      run '${{ inputs.suite }}' \
      --loglevel=2 \
      --artifacts-dir="${ARTIFACTS_DIR}" \
      --flake-attempts="${flake_attempts}" \
      --timeout="${e2e_timeout_minutes}m" \
      --feature-gates='${{ inputs.featureGates }}' \
      --ingress-controller-address="${ingress_controller_address}" \
      --ingress-controller-ingress-class-name="${ingress_class_name}" \
      --ingress-controller-custom-annotations="${ingress_custom_annotations}" \
      ${{ inputs.extraArgs }}
  
  - name: Collect and upload E2E artifacts
    uses: ./go/src/github.com/scylladb/scylla-operator/.github/actions/collect-e2e-artifacts
    if: ${{ always() }}
    with:
      repositoryPath: ${{ inputs.repositoryPath }}
      jobSuffix: ${{ inputs.jobSuffix }}
