name: "Setup Minikube"
description: 'Installs minikube Kubernetes cluster'
runs:
  using: "composite"
  steps:
  - name: Configure system
    shell: bash
    run: |
      set -euExo pipefail

      echo 'fs.aio-max-nr = 10485760' | sudo tee /etc/sysctl.d/90-scylla.conf >/dev/null
      sudo sysctl --system
  - name: Install minikube
    shell: bash
    run: |
      set -x
      sudo apt-get install -y --no-install-recommends conntrack
      sudo curl -s --fail -L https://storage.googleapis.com/minikube/releases/v1.25.2/minikube-linux-amd64 -o /usr/local/bin/minikube
      sudo chmod +x /usr/local/bin/minikube

      sudo curl -s --fail -L "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl" -o /usr/local/bin/kubectl
      sudo chmod +x /usr/local/bin/kubectl
      sudo curl -s --fail -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.23.0/crictl-v1.23.0-linux-amd64.tar.gz | tar -f - -xz -C /usr/local/bin crictl
  - name: Configure minikube
    shell: bash
    run: |
      set -x
      sudo minikube config set driver none
      sudo minikube config set EmbedCerts true
      sudo ip link set docker0 promisc on
  - name: Start minikube
    shell: bash
    run: |
      set -euEx -o pipefail

      # Hack /etc/ssl/certs/ as it's passed down to the KAS static pod.
      cat << EOF | sudo tee /etc/ssl/certs/audit-policy.yaml > /dev/null
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
      - level: RequestResponse
      EOF

      sudo minikube start --wait=all --extra-config='apiserver.event-ttl=24h' --extra-config='apiserver.audit-policy-file=/etc/ssl/certs/audit-policy.yaml' --extra-config='apiserver.audit-log-path=/var/log/kube-apiserver-audit.log' --extra-config='apiserver.v=9' --extra-config='etcd.v=9'

      mkdir -p ~/.kube/
      sudo cat /root/.kube/config > ~/.kube/config
      sudo minikube version
      kubectl version

      # We can't hack an existing dir for logs because they are read only.
      sudo $( which yq ) -i e '.spec.volumes += {"name": "logs","hostPath": {"path": "/var/log"}} | .spec.containers[0].volumeMounts += {"name": "logs", "mountPath": "/var/log"}' /etc/kubernetes/manifests/kube-apiserver.yaml

      # We need to wait for the apiserver to be restarted.
      until sudo test -f /var/log/kube-apiserver-audit.log; do
        echo 'Waiting for /var/log/kube-apiserver-audit.log to be created.'
        sleep 1;
      done

      until kubectl get namespace kube-system 2>/dev/null 1>&2; do
        echo 'Waiting for apiserver to come up.'
        sleep 1
      done
      
      sudo $( which yq ) -i e '.spec.containers[] |= select(.name == "storage-provisioner").terminationMessagePolicy = "FallbackToLogsOnError"' /etc/kubernetes/addons/storage-provisioner.yaml

      # Hotfix pods/ephemeralcontainers perms needed by e2e tests
      # (Upstream fix in https://github.com/kubernetes/kubernetes/pull/109332)
      kubectl apply --server-side -f - <<EOF
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: scylladb-e2e:hotfixes
          labels:
            rbac.authorization.k8s.io/aggregate-to-admin: "true"
        rules:
        - apiGroups:
          - ""
          resources:
          - pods/ephemeralcontainers
          verbs:
          - patch
      EOF

      kubectl -n kube-system rollout status --timeout=5m deployment.apps/coredns
      
      kubectl get -n kube-system -o yaml daemonsets.apps/kube-proxy -o yaml | $( which yq ) eval '.spec.template.spec.containers[] |= select(.name == "kube-proxy").command += "--v=4"' - | kubectl apply -n kube-system -f -
      
      # DaemonSet resposible for removing stale TCP conntrack entries causing issues in gossip.
      # https://github.com/scylladb/scylla-operator/issues/975
      # TODO: remove when GitHub Actions upgrades to kernel version 5.14.
      kubectl -n kube-system create -f - <<EOF
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: conntrack-cleaner-agent
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: conntrack-cleaner-agent
          template:
            metadata:
              labels:
                k8s-app: conntrack-cleaner-agent
            spec:
              hostNetwork: true
              containers:
              - name: conntrack-cleaner-agent
                image: docker.io/hanamantagoud/conntrack-cleaner@sha256:8e57d55bd7672166f2f1ae5f2f6fb7b1945ab5e97959200d71f0963218c3e771
                env:
                # Values for CONNTRACK_TABLE_DUMP_FREQUENCY should contain duration such as 1s,100ms.
                # NOTE: Dont set values in nonosecond (ns), microsecond(ms).
                - name: CONNTRACK_TABLE_DUMP_FREQUENCY
                  value: "1s"
                - name: CONNECTION_RENEWAL_THRESHOLD
                  value: "3"
                securityContext:
                  privileged: false
                  capabilities:
                    add: ["NET_ADMIN", "NET_RAW"]
      EOF
      
      kubectl -n kube-system rollout status --timeout=5m daemonset.apps/conntrack-cleaner-agent
      
      kubectl label nodes scylla.scylladb.com/node-type=scylla --all
