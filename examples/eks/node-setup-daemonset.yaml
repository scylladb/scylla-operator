# ClusterRole for node-setup-daemonset.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-setup-daemonset
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - patch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create


---

# ServiceAccount for node-setup daemonset.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-setup-daemonset
  namespace: default
---
# Bind node-setup daemonset ServiceAccount with ClusterRole.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-setup-daemonset
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-setup-daemonset
subjects:
- kind: ServiceAccount
  name: node-setup-daemonset
  namespace: default
---
# Daemonset that will configure disks and networking interfaces on node.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-setup
spec:
  selector:
    matchLabels:
      name: node-setup
  template:
    metadata:
      labels:
        name: node-setup
    spec:
      hostPID: true
      hostIPC: true
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: pool
                  operator: In
                  values:
                   - scylla-pool
      tolerations:
        - key: role
          operator: Equal
          value: scylla-clusters
          effect: NoSchedule
        - key: role
          operator: Equal
          value: cassandra-stress
          effect: NoSchedule
      serviceAccountName: node-setup-daemonset
      containers:
      - name: node-setup
        image: scylladb/scylla-machine-image:k8s-aws-666.development-20201023.0c4dfa1
        imagePullPolicy: Always
        args:
          - --all
        env:
          - name: ROOT_DISK
            value: /mnt/hostfs/mnt/raid-disks/disk0
          - name: SCYLLAD_CONF_MOUNT
            value: /mnt/scylla.d/
        securityContext:
          privileged: true
        volumeMounts:
          - name: hostfs
            mountPath: /mnt/hostfs
            mountPropagation: Bidirectional
          - name: hostetcscyllad
            mountPath: /mnt/scylla.d
            mountPropagation: Bidirectional
          - name: hostirqbalanceconfig
            mountPath: /etc/conf.d/irqbalance
            mountPropagation: Bidirectional
      volumes:
        - name: hostfs
          hostPath:
            path: /
        - name: hostetcscyllad
          hostPath:
            path: /etc/scylla.d/
        - name: hostirqbalanceconfig
          hostPath:
            path: /etc/sysconfig/irqbalance

---
# Daemonset that will disks on monitoring node.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: monitoring-node-setup
spec:
  selector:
    matchLabels:
      name: monitoring-node-setup
  template:
    metadata:
      labels:
        name: monitoring-node-setup
    spec:
      hostPID: true
      hostIPC: true
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: pool
                    operator: In
                    values:
                      - monitoring-pool
      serviceAccountName: node-setup-daemonset
      containers:
        - name: node-setup
          image: scylladb/scylla-machine-image:k8s-aws-666.development-20201023.0c4dfa1
          imagePullPolicy: Always
          args:
            - --setup-disks
          env:
            - name: ROOT_DISK
              value: /mnt/hostfs/mnt/raid-disks/disk0
          securityContext:
            privileged: true
          volumeMounts:
            - name: hostfs
              mountPath: /mnt/hostfs
              mountPropagation: Bidirectional
      volumes:
        - name: hostfs
          hostPath:
            path: /
