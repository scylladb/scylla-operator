apiVersion: v1
kind: Namespace
metadata:
  name: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
spec:
  ports:
    - name: "api"
      port: 9000
      targetPort: 9000
      protocol: "TCP"
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
  type: "ClusterIP"
---
apiVersion: v1
data:
  user-policy.json: |-
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetBucketLocation",
            "s3:ListBucket",
            "s3:ListBucketMultipartUploads"
          ],
          "Resource": [
            "arn:aws:s3:::backuptest-*",
            "arn:aws:s3:::my-*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:DeleteObject",
            "s3:AbortMultipartUpload",
            "s3:ListMultipartUploadParts"
          ],
          "Resource": [
            "arn:aws:s3:::*"
          ]
        }
      ]
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: user-policy
  namespace: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: MINIO_REGION
              value: "us-east-1"
            - name: MINIO_ROOT_USER
              value: "minio"
            - name: MINIO_ROOT_PASSWORD
              value: "minio123"
          args:
            - server
            - /mnt/data/
          volumeMounts:
            - name: data
              mountPath: /mnt/data/
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
      volumes:
        - name: data
          emptyDir: {}
