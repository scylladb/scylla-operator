//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlternatorOptions) DeepCopyInto(out *AlternatorOptions) {
	*out = *in
	if in.ServingCertificate != nil {
		in, out := &in.ServingCertificate, &out.ServingCertificate
		*out = new(TLSCertificate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlternatorOptions.
func (in *AlternatorOptions) DeepCopy() *AlternatorOptions {
	if in == nil {
		return nil
	}
	out := new(AlternatorOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BroadcastOptions) DeepCopyInto(out *BroadcastOptions) {
	*out = *in
	if in.PodIP != nil {
		in, out := &in.PodIP, &out.PodIP
		*out = new(PodIPAddressOptions)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BroadcastOptions.
func (in *BroadcastOptions) DeepCopy() *BroadcastOptions {
	if in == nil {
		return nil
	}
	out := new(BroadcastOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CQLExposeIngressOptions) DeepCopyInto(out *CQLExposeIngressOptions) {
	*out = *in
	in.ObjectTemplateMetadata.DeepCopyInto(&out.ObjectTemplateMetadata)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CQLExposeIngressOptions.
func (in *CQLExposeIngressOptions) DeepCopy() *CQLExposeIngressOptions {
	if in == nil {
		return nil
	}
	out := new(CQLExposeIngressOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CQLExposeOptions) DeepCopyInto(out *CQLExposeOptions) {
	*out = *in
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(CQLExposeIngressOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CQLExposeOptions.
func (in *CQLExposeOptions) DeepCopy() *CQLExposeOptions {
	if in == nil {
		return nil
	}
	out := new(CQLExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientHealthcheckProbes) DeepCopyInto(out *ClientHealthcheckProbes) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientHealthcheckProbes.
func (in *ClientHealthcheckProbes) DeepCopy() *ClientHealthcheckProbes {
	if in == nil {
		return nil
	}
	out := new(ClientHealthcheckProbes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Components) DeepCopyInto(out *Components) {
	*out = *in
	if in.Prometheus != nil {
		in, out := &in.Prometheus, &out.Prometheus
		*out = new(PrometheusSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Grafana != nil {
		in, out := &in.Grafana, &out.Grafana
		*out = new(GrafanaSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Components.
func (in *Components) DeepCopy() *Components {
	if in == nil {
		return nil
	}
	out := new(Components)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceDiscovery) DeepCopyInto(out *DeviceDiscovery) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceDiscovery.
func (in *DeviceDiscovery) DeepCopy() *DeviceDiscovery {
	if in == nil {
		return nil
	}
	out := new(DeviceDiscovery)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExposeOptions) DeepCopyInto(out *ExposeOptions) {
	*out = *in
	if in.CQL != nil {
		in, out := &in.CQL, &out.CQL
		*out = new(CQLExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeService != nil {
		in, out := &in.NodeService, &out.NodeService
		*out = new(NodeServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BroadcastOptions != nil {
		in, out := &in.BroadcastOptions, &out.BroadcastOptions
		*out = new(NodeBroadcastOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExposeOptions.
func (in *ExposeOptions) DeepCopy() *ExposeOptions {
	if in == nil {
		return nil
	}
	out := new(ExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilesystemConfiguration) DeepCopyInto(out *FilesystemConfiguration) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilesystemConfiguration.
func (in *FilesystemConfiguration) DeepCopy() *FilesystemConfiguration {
	if in == nil {
		return nil
	}
	out := new(FilesystemConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaAuthentication) DeepCopyInto(out *GrafanaAuthentication) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaAuthentication.
func (in *GrafanaAuthentication) DeepCopy() *GrafanaAuthentication {
	if in == nil {
		return nil
	}
	out := new(GrafanaAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaExposeOptions) DeepCopyInto(out *GrafanaExposeOptions) {
	*out = *in
	if in.WebInterface != nil {
		in, out := &in.WebInterface, &out.WebInterface
		*out = new(HTTPSExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaExposeOptions.
func (in *GrafanaExposeOptions) DeepCopy() *GrafanaExposeOptions {
	if in == nil {
		return nil
	}
	out := new(GrafanaExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrafanaSpec) DeepCopyInto(out *GrafanaSpec) {
	*out = *in
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(PlacementSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ExposeOptions != nil {
		in, out := &in.ExposeOptions, &out.ExposeOptions
		*out = new(GrafanaExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	out.Authentication = in.Authentication
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrafanaSpec.
func (in *GrafanaSpec) DeepCopy() *GrafanaSpec {
	if in == nil {
		return nil
	}
	out := new(GrafanaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSExposeOptions) DeepCopyInto(out *HTTPSExposeOptions) {
	*out = *in
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(IngressOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSExposeOptions.
func (in *HTTPSExposeOptions) DeepCopy() *HTTPSExposeOptions {
	if in == nil {
		return nil
	}
	out := new(HTTPSExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressOptions) DeepCopyInto(out *IngressOptions) {
	*out = *in
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DNSDomains != nil {
		in, out := &in.DNSDomains, &out.DNSDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressOptions.
func (in *IngressOptions) DeepCopy() *IngressOptions {
	if in == nil {
		return nil
	}
	out := new(IngressOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalDiskSetup) DeepCopyInto(out *LocalDiskSetup) {
	*out = *in
	if in.LoopDevices != nil {
		in, out := &in.LoopDevices, &out.LoopDevices
		*out = make([]LoopDeviceConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAIDs != nil {
		in, out := &in.RAIDs, &out.RAIDs
		*out = make([]RAIDConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Filesystems != nil {
		in, out := &in.Filesystems, &out.Filesystems
		*out = make([]FilesystemConfiguration, len(*in))
		copy(*out, *in)
	}
	if in.Mounts != nil {
		in, out := &in.Mounts, &out.Mounts
		*out = make([]MountConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalDiskSetup.
func (in *LocalDiskSetup) DeepCopy() *LocalDiskSetup {
	if in == nil {
		return nil
	}
	out := new(LocalDiskSetup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalScyllaDBReference) DeepCopyInto(out *LocalScyllaDBReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalScyllaDBReference.
func (in *LocalScyllaDBReference) DeepCopy() *LocalScyllaDBReference {
	if in == nil {
		return nil
	}
	out := new(LocalScyllaDBReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoopDeviceConfiguration) DeepCopyInto(out *LoopDeviceConfiguration) {
	*out = *in
	out.Size = in.Size.DeepCopy()
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoopDeviceConfiguration.
func (in *LoopDeviceConfiguration) DeepCopy() *LoopDeviceConfiguration {
	if in == nil {
		return nil
	}
	out := new(LoopDeviceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountConfiguration) DeepCopyInto(out *MountConfiguration) {
	*out = *in
	if in.UnsupportedOptions != nil {
		in, out := &in.UnsupportedOptions, &out.UnsupportedOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountConfiguration.
func (in *MountConfiguration) DeepCopy() *MountConfiguration {
	if in == nil {
		return nil
	}
	out := new(MountConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeBroadcastOptions) DeepCopyInto(out *NodeBroadcastOptions) {
	*out = *in
	in.Nodes.DeepCopyInto(&out.Nodes)
	in.Clients.DeepCopyInto(&out.Clients)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeBroadcastOptions.
func (in *NodeBroadcastOptions) DeepCopy() *NodeBroadcastOptions {
	if in == nil {
		return nil
	}
	out := new(NodeBroadcastOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfig) DeepCopyInto(out *NodeConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfig.
func (in *NodeConfig) DeepCopy() *NodeConfig {
	if in == nil {
		return nil
	}
	out := new(NodeConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigCondition) DeepCopyInto(out *NodeConfigCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigCondition.
func (in *NodeConfigCondition) DeepCopy() *NodeConfigCondition {
	if in == nil {
		return nil
	}
	out := new(NodeConfigCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in NodeConfigConditions) DeepCopyInto(out *NodeConfigConditions) {
	{
		in := &in
		*out = make(NodeConfigConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigConditions.
func (in NodeConfigConditions) DeepCopy() NodeConfigConditions {
	if in == nil {
		return nil
	}
	out := new(NodeConfigConditions)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigList) DeepCopyInto(out *NodeConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigList.
func (in *NodeConfigList) DeepCopy() *NodeConfigList {
	if in == nil {
		return nil
	}
	out := new(NodeConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigNodeStatus) DeepCopyInto(out *NodeConfigNodeStatus) {
	*out = *in
	if in.TunedContainers != nil {
		in, out := &in.TunedContainers, &out.TunedContainers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigNodeStatus.
func (in *NodeConfigNodeStatus) DeepCopy() *NodeConfigNodeStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigPlacement) DeepCopyInto(out *NodeConfigPlacement) {
	*out = *in
	in.Affinity.DeepCopyInto(&out.Affinity)
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigPlacement.
func (in *NodeConfigPlacement) DeepCopy() *NodeConfigPlacement {
	if in == nil {
		return nil
	}
	out := new(NodeConfigPlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigSpec) DeepCopyInto(out *NodeConfigSpec) {
	*out = *in
	in.Placement.DeepCopyInto(&out.Placement)
	if in.LocalDiskSetup != nil {
		in, out := &in.LocalDiskSetup, &out.LocalDiskSetup
		*out = new(LocalDiskSetup)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigSpec.
func (in *NodeConfigSpec) DeepCopy() *NodeConfigSpec {
	if in == nil {
		return nil
	}
	out := new(NodeConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeConfigStatus) DeepCopyInto(out *NodeConfigStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(NodeConfigConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeStatuses != nil {
		in, out := &in.NodeStatuses, &out.NodeStatuses
		*out = make([]NodeConfigNodeStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeConfigStatus.
func (in *NodeConfigStatus) DeepCopy() *NodeConfigStatus {
	if in == nil {
		return nil
	}
	out := new(NodeConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeServiceTemplate) DeepCopyInto(out *NodeServiceTemplate) {
	*out = *in
	in.ObjectTemplateMetadata.DeepCopyInto(&out.ObjectTemplateMetadata)
	if in.ExternalTrafficPolicy != nil {
		in, out := &in.ExternalTrafficPolicy, &out.ExternalTrafficPolicy
		*out = new(v1.ServiceExternalTrafficPolicy)
		**out = **in
	}
	if in.AllocateLoadBalancerNodePorts != nil {
		in, out := &in.AllocateLoadBalancerNodePorts, &out.AllocateLoadBalancerNodePorts
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerClass != nil {
		in, out := &in.LoadBalancerClass, &out.LoadBalancerClass
		*out = new(string)
		**out = **in
	}
	if in.InternalTrafficPolicy != nil {
		in, out := &in.InternalTrafficPolicy, &out.InternalTrafficPolicy
		*out = new(v1.ServiceInternalTrafficPolicy)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeServiceTemplate.
func (in *NodeServiceTemplate) DeepCopy() *NodeServiceTemplate {
	if in == nil {
		return nil
	}
	out := new(NodeServiceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectTemplateMetadata) DeepCopyInto(out *ObjectTemplateMetadata) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectTemplateMetadata.
func (in *ObjectTemplateMetadata) DeepCopy() *ObjectTemplateMetadata {
	if in == nil {
		return nil
	}
	out := new(ObjectTemplateMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperatorManagedTLSCertificateOptions) DeepCopyInto(out *OperatorManagedTLSCertificateOptions) {
	*out = *in
	if in.AdditionalDNSNames != nil {
		in, out := &in.AdditionalDNSNames, &out.AdditionalDNSNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AdditionalIPAddresses != nil {
		in, out := &in.AdditionalIPAddresses, &out.AdditionalIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperatorManagedTLSCertificateOptions.
func (in *OperatorManagedTLSCertificateOptions) DeepCopy() *OperatorManagedTLSCertificateOptions {
	if in == nil {
		return nil
	}
	out := new(OperatorManagedTLSCertificateOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Placement) DeepCopyInto(out *Placement) {
	*out = *in
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(v1.NodeAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAffinity != nil {
		in, out := &in.PodAffinity, &out.PodAffinity
		*out = new(v1.PodAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAntiAffinity != nil {
		in, out := &in.PodAntiAffinity, &out.PodAntiAffinity
		*out = new(v1.PodAntiAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Placement.
func (in *Placement) DeepCopy() *Placement {
	if in == nil {
		return nil
	}
	out := new(Placement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementSpec) DeepCopyInto(out *PlacementSpec) {
	*out = *in
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(v1.NodeAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAffinity != nil {
		in, out := &in.PodAffinity, &out.PodAffinity
		*out = new(v1.PodAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAntiAffinity != nil {
		in, out := &in.PodAntiAffinity, &out.PodAntiAffinity
		*out = new(v1.PodAntiAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementSpec.
func (in *PlacementSpec) DeepCopy() *PlacementSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodIPAddressOptions) DeepCopyInto(out *PodIPAddressOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodIPAddressOptions.
func (in *PodIPAddressOptions) DeepCopy() *PodIPAddressOptions {
	if in == nil {
		return nil
	}
	out := new(PodIPAddressOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodIPInterfaceOptions) DeepCopyInto(out *PodIPInterfaceOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodIPInterfaceOptions.
func (in *PodIPInterfaceOptions) DeepCopy() *PodIPInterfaceOptions {
	if in == nil {
		return nil
	}
	out := new(PodIPInterfaceOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusExposeOptions) DeepCopyInto(out *PrometheusExposeOptions) {
	*out = *in
	if in.WebInterface != nil {
		in, out := &in.WebInterface, &out.WebInterface
		*out = new(HTTPSExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusExposeOptions.
func (in *PrometheusExposeOptions) DeepCopy() *PrometheusExposeOptions {
	if in == nil {
		return nil
	}
	out := new(PrometheusExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusSpec) DeepCopyInto(out *PrometheusSpec) {
	*out = *in
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(PlacementSpec)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.ExposeOptions != nil {
		in, out := &in.ExposeOptions, &out.ExposeOptions
		*out = new(PrometheusExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(Storage)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusSpec.
func (in *PrometheusSpec) DeepCopy() *PrometheusSpec {
	if in == nil {
		return nil
	}
	out := new(PrometheusSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RAID0Options) DeepCopyInto(out *RAID0Options) {
	*out = *in
	out.Devices = in.Devices
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RAID0Options.
func (in *RAID0Options) DeepCopy() *RAID0Options {
	if in == nil {
		return nil
	}
	out := new(RAID0Options)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RAIDConfiguration) DeepCopyInto(out *RAIDConfiguration) {
	*out = *in
	if in.RAID0 != nil {
		in, out := &in.RAID0, &out.RAID0
		*out = new(RAID0Options)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RAIDConfiguration.
func (in *RAIDConfiguration) DeepCopy() *RAIDConfiguration {
	if in == nil {
		return nil
	}
	out := new(RAIDConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackExposeOptions) DeepCopyInto(out *RackExposeOptions) {
	*out = *in
	if in.NodeService != nil {
		in, out := &in.NodeService, &out.NodeService
		*out = new(RackNodeServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackExposeOptions.
func (in *RackExposeOptions) DeepCopy() *RackExposeOptions {
	if in == nil {
		return nil
	}
	out := new(RackExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackNodeServiceTemplate) DeepCopyInto(out *RackNodeServiceTemplate) {
	*out = *in
	in.ObjectTemplateMetadata.DeepCopyInto(&out.ObjectTemplateMetadata)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackNodeServiceTemplate.
func (in *RackNodeServiceTemplate) DeepCopy() *RackNodeServiceTemplate {
	if in == nil {
		return nil
	}
	out := new(RackNodeServiceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackSpec) DeepCopyInto(out *RackSpec) {
	*out = *in
	in.RackTemplate.DeepCopyInto(&out.RackTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackSpec.
func (in *RackSpec) DeepCopy() *RackSpec {
	if in == nil {
		return nil
	}
	out := new(RackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackStatus) DeepCopyInto(out *RackStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedNodes != nil {
		in, out := &in.UpdatedNodes, &out.UpdatedNodes
		*out = new(int32)
		**out = **in
	}
	if in.ReadyNodes != nil {
		in, out := &in.ReadyNodes, &out.ReadyNodes
		*out = new(int32)
		**out = **in
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(int32)
		**out = **in
	}
	if in.Stale != nil {
		in, out := &in.Stale, &out.Stale
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackStatus.
func (in *RackStatus) DeepCopy() *RackStatus {
	if in == nil {
		return nil
	}
	out := new(RackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RackTemplate) DeepCopyInto(out *RackTemplate) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(Placement)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologyLabelSelector != nil {
		in, out := &in.TopologyLabelSelector, &out.TopologyLabelSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ScyllaDB != nil {
		in, out := &in.ScyllaDB, &out.ScyllaDB
		*out = new(ScyllaDBTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ScyllaDBManagerAgent != nil {
		in, out := &in.ScyllaDBManagerAgent, &out.ScyllaDBManagerAgent
		*out = new(ScyllaDBManagerAgentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ExposeOptions != nil {
		in, out := &in.ExposeOptions, &out.ExposeOptions
		*out = new(RackExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RackTemplate.
func (in *RackTemplate) DeepCopy() *RackTemplate {
	if in == nil {
		return nil
	}
	out := new(RackTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteKubernetesCluster) DeepCopyInto(out *RemoteKubernetesCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteKubernetesCluster.
func (in *RemoteKubernetesCluster) DeepCopy() *RemoteKubernetesCluster {
	if in == nil {
		return nil
	}
	out := new(RemoteKubernetesCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteKubernetesCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteKubernetesClusterList) DeepCopyInto(out *RemoteKubernetesClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RemoteKubernetesCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteKubernetesClusterList.
func (in *RemoteKubernetesClusterList) DeepCopy() *RemoteKubernetesClusterList {
	if in == nil {
		return nil
	}
	out := new(RemoteKubernetesClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteKubernetesClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteKubernetesClusterSpec) DeepCopyInto(out *RemoteKubernetesClusterSpec) {
	*out = *in
	out.KubeconfigSecretRef = in.KubeconfigSecretRef
	if in.ClientHealthcheckProbes != nil {
		in, out := &in.ClientHealthcheckProbes, &out.ClientHealthcheckProbes
		*out = new(ClientHealthcheckProbes)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteKubernetesClusterSpec.
func (in *RemoteKubernetesClusterSpec) DeepCopy() *RemoteKubernetesClusterSpec {
	if in == nil {
		return nil
	}
	out := new(RemoteKubernetesClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteKubernetesClusterStatus) DeepCopyInto(out *RemoteKubernetesClusterStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteKubernetesClusterStatus.
func (in *RemoteKubernetesClusterStatus) DeepCopy() *RemoteKubernetesClusterStatus {
	if in == nil {
		return nil
	}
	out := new(RemoteKubernetesClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteOwner) DeepCopyInto(out *RemoteOwner) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteOwner.
func (in *RemoteOwner) DeepCopy() *RemoteOwner {
	if in == nil {
		return nil
	}
	out := new(RemoteOwner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteOwner) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteOwnerList) DeepCopyInto(out *RemoteOwnerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RemoteOwner, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteOwnerList.
func (in *RemoteOwnerList) DeepCopy() *RemoteOwnerList {
	if in == nil {
		return nil
	}
	out := new(RemoteOwnerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemoteOwnerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDB) DeepCopyInto(out *ScyllaDB) {
	*out = *in
	if in.ExternalSeeds != nil {
		in, out := &in.ExternalSeeds, &out.ExternalSeeds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AlternatorOptions != nil {
		in, out := &in.AlternatorOptions, &out.AlternatorOptions
		*out = new(AlternatorOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.AdditionalScyllaDBArguments != nil {
		in, out := &in.AdditionalScyllaDBArguments, &out.AdditionalScyllaDBArguments
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableDeveloperMode != nil {
		in, out := &in.EnableDeveloperMode, &out.EnableDeveloperMode
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDB.
func (in *ScyllaDB) DeepCopy() *ScyllaDB {
	if in == nil {
		return nil
	}
	out := new(ScyllaDB)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBCluster) DeepCopyInto(out *ScyllaDBCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBCluster.
func (in *ScyllaDBCluster) DeepCopy() *ScyllaDBCluster {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterDatacenter) DeepCopyInto(out *ScyllaDBClusterDatacenter) {
	*out = *in
	in.ScyllaDBClusterDatacenterTemplate.DeepCopyInto(&out.ScyllaDBClusterDatacenterTemplate)
	if in.ForceRedeploymentReason != nil {
		in, out := &in.ForceRedeploymentReason, &out.ForceRedeploymentReason
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterDatacenter.
func (in *ScyllaDBClusterDatacenter) DeepCopy() *ScyllaDBClusterDatacenter {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterDatacenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterDatacenterStatus) DeepCopyInto(out *ScyllaDBClusterDatacenterStatus) {
	*out = *in
	if in.RemoteNamespaceName != nil {
		in, out := &in.RemoteNamespaceName, &out.RemoteNamespaceName
		*out = new(string)
		**out = **in
	}
	if in.CurrentVersion != nil {
		in, out := &in.CurrentVersion, &out.CurrentVersion
		*out = new(string)
		**out = **in
	}
	if in.UpdatedVersion != nil {
		in, out := &in.UpdatedVersion, &out.UpdatedVersion
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedNodes != nil {
		in, out := &in.UpdatedNodes, &out.UpdatedNodes
		*out = new(int32)
		**out = **in
	}
	if in.ReadyNodes != nil {
		in, out := &in.ReadyNodes, &out.ReadyNodes
		*out = new(int32)
		**out = **in
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(int32)
		**out = **in
	}
	if in.Stale != nil {
		in, out := &in.Stale, &out.Stale
		*out = new(bool)
		**out = **in
	}
	if in.Racks != nil {
		in, out := &in.Racks, &out.Racks
		*out = make([]ScyllaDBClusterRackStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterDatacenterStatus.
func (in *ScyllaDBClusterDatacenterStatus) DeepCopy() *ScyllaDBClusterDatacenterStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterDatacenterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterDatacenterTemplate) DeepCopyInto(out *ScyllaDBClusterDatacenterTemplate) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(ObjectTemplateMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Placement != nil {
		in, out := &in.Placement, &out.Placement
		*out = new(Placement)
		(*in).DeepCopyInto(*out)
	}
	if in.TopologyLabelSelector != nil {
		in, out := &in.TopologyLabelSelector, &out.TopologyLabelSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ScyllaDB != nil {
		in, out := &in.ScyllaDB, &out.ScyllaDB
		*out = new(ScyllaDBTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.ScyllaDBManagerAgent != nil {
		in, out := &in.ScyllaDBManagerAgent, &out.ScyllaDBManagerAgent
		*out = new(ScyllaDBManagerAgentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.RackTemplate != nil {
		in, out := &in.RackTemplate, &out.RackTemplate
		*out = new(RackTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Racks != nil {
		in, out := &in.Racks, &out.Racks
		*out = make([]RackSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterDatacenterTemplate.
func (in *ScyllaDBClusterDatacenterTemplate) DeepCopy() *ScyllaDBClusterDatacenterTemplate {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterDatacenterTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterExposeOptions) DeepCopyInto(out *ScyllaDBClusterExposeOptions) {
	*out = *in
	if in.NodeService != nil {
		in, out := &in.NodeService, &out.NodeService
		*out = new(NodeServiceTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.BroadcastOptions != nil {
		in, out := &in.BroadcastOptions, &out.BroadcastOptions
		*out = new(ScyllaDBClusterNodeBroadcastOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterExposeOptions.
func (in *ScyllaDBClusterExposeOptions) DeepCopy() *ScyllaDBClusterExposeOptions {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterExposeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterList) DeepCopyInto(out *ScyllaDBClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaDBCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterList.
func (in *ScyllaDBClusterList) DeepCopy() *ScyllaDBClusterList {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterNodeBroadcastOptions) DeepCopyInto(out *ScyllaDBClusterNodeBroadcastOptions) {
	*out = *in
	in.Nodes.DeepCopyInto(&out.Nodes)
	in.Clients.DeepCopyInto(&out.Clients)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterNodeBroadcastOptions.
func (in *ScyllaDBClusterNodeBroadcastOptions) DeepCopy() *ScyllaDBClusterNodeBroadcastOptions {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterNodeBroadcastOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterRackStatus) DeepCopyInto(out *ScyllaDBClusterRackStatus) {
	*out = *in
	if in.CurrentVersion != nil {
		in, out := &in.CurrentVersion, &out.CurrentVersion
		*out = new(string)
		**out = **in
	}
	if in.UpdatedVersion != nil {
		in, out := &in.UpdatedVersion, &out.UpdatedVersion
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedNodes != nil {
		in, out := &in.UpdatedNodes, &out.UpdatedNodes
		*out = new(int32)
		**out = **in
	}
	if in.ReadyNodes != nil {
		in, out := &in.ReadyNodes, &out.ReadyNodes
		*out = new(int32)
		**out = **in
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(int32)
		**out = **in
	}
	if in.Stale != nil {
		in, out := &in.Stale, &out.Stale
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterRackStatus.
func (in *ScyllaDBClusterRackStatus) DeepCopy() *ScyllaDBClusterRackStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterRackStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterSpec) DeepCopyInto(out *ScyllaDBClusterSpec) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(ObjectTemplateMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	in.ScyllaDB.DeepCopyInto(&out.ScyllaDB)
	if in.ScyllaDBManagerAgent != nil {
		in, out := &in.ScyllaDBManagerAgent, &out.ScyllaDBManagerAgent
		*out = new(ScyllaDBManagerAgent)
		(*in).DeepCopyInto(*out)
	}
	if in.ForceRedeploymentReason != nil {
		in, out := &in.ForceRedeploymentReason, &out.ForceRedeploymentReason
		*out = new(string)
		**out = **in
	}
	if in.ExposeOptions != nil {
		in, out := &in.ExposeOptions, &out.ExposeOptions
		*out = new(ScyllaDBClusterExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterTemplate != nil {
		in, out := &in.DatacenterTemplate, &out.DatacenterTemplate
		*out = new(ScyllaDBClusterDatacenterTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = make([]ScyllaDBClusterDatacenter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinTerminationGracePeriodSeconds != nil {
		in, out := &in.MinTerminationGracePeriodSeconds, &out.MinTerminationGracePeriodSeconds
		*out = new(int32)
		**out = **in
	}
	if in.MinReadySeconds != nil {
		in, out := &in.MinReadySeconds, &out.MinReadySeconds
		*out = new(int32)
		**out = **in
	}
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]v1.PodReadinessGate, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterSpec.
func (in *ScyllaDBClusterSpec) DeepCopy() *ScyllaDBClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBClusterStatus) DeepCopyInto(out *ScyllaDBClusterStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CurrentVersion != nil {
		in, out := &in.CurrentVersion, &out.CurrentVersion
		*out = new(string)
		**out = **in
	}
	if in.UpdatedVersion != nil {
		in, out := &in.UpdatedVersion, &out.UpdatedVersion
		*out = new(string)
		**out = **in
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedNodes != nil {
		in, out := &in.UpdatedNodes, &out.UpdatedNodes
		*out = new(int32)
		**out = **in
	}
	if in.ReadyNodes != nil {
		in, out := &in.ReadyNodes, &out.ReadyNodes
		*out = new(int32)
		**out = **in
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(int32)
		**out = **in
	}
	if in.Datacenters != nil {
		in, out := &in.Datacenters, &out.Datacenters
		*out = make([]ScyllaDBClusterDatacenterStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBClusterStatus.
func (in *ScyllaDBClusterStatus) DeepCopy() *ScyllaDBClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBDatacenter) DeepCopyInto(out *ScyllaDBDatacenter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBDatacenter.
func (in *ScyllaDBDatacenter) DeepCopy() *ScyllaDBDatacenter {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBDatacenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBDatacenter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBDatacenterList) DeepCopyInto(out *ScyllaDBDatacenterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaDBDatacenter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBDatacenterList.
func (in *ScyllaDBDatacenterList) DeepCopy() *ScyllaDBDatacenterList {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBDatacenterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBDatacenterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBDatacenterSpec) DeepCopyInto(out *ScyllaDBDatacenterSpec) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(ObjectTemplateMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterName != nil {
		in, out := &in.DatacenterName, &out.DatacenterName
		*out = new(string)
		**out = **in
	}
	in.ScyllaDB.DeepCopyInto(&out.ScyllaDB)
	if in.ScyllaDBManagerAgent != nil {
		in, out := &in.ScyllaDBManagerAgent, &out.ScyllaDBManagerAgent
		*out = new(ScyllaDBManagerAgent)
		(*in).DeepCopyInto(*out)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.DNSPolicy != nil {
		in, out := &in.DNSPolicy, &out.DNSPolicy
		*out = new(v1.DNSPolicy)
		**out = **in
	}
	if in.DNSDomains != nil {
		in, out := &in.DNSDomains, &out.DNSDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ForceRedeploymentReason != nil {
		in, out := &in.ForceRedeploymentReason, &out.ForceRedeploymentReason
		*out = new(string)
		**out = **in
	}
	if in.ExposeOptions != nil {
		in, out := &in.ExposeOptions, &out.ExposeOptions
		*out = new(ExposeOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RackTemplate != nil {
		in, out := &in.RackTemplate, &out.RackTemplate
		*out = new(RackTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Racks != nil {
		in, out := &in.Racks, &out.Racks
		*out = make([]RackSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisableAutomaticOrphanedNodeReplacement != nil {
		in, out := &in.DisableAutomaticOrphanedNodeReplacement, &out.DisableAutomaticOrphanedNodeReplacement
		*out = new(bool)
		**out = **in
	}
	if in.MinTerminationGracePeriodSeconds != nil {
		in, out := &in.MinTerminationGracePeriodSeconds, &out.MinTerminationGracePeriodSeconds
		*out = new(int32)
		**out = **in
	}
	if in.MinReadySeconds != nil {
		in, out := &in.MinReadySeconds, &out.MinReadySeconds
		*out = new(int32)
		**out = **in
	}
	if in.ReadinessGates != nil {
		in, out := &in.ReadinessGates, &out.ReadinessGates
		*out = make([]v1.PodReadinessGate, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBDatacenterSpec.
func (in *ScyllaDBDatacenterSpec) DeepCopy() *ScyllaDBDatacenterSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBDatacenterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBDatacenterStatus) DeepCopyInto(out *ScyllaDBDatacenterStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = new(int32)
		**out = **in
	}
	if in.CurrentNodes != nil {
		in, out := &in.CurrentNodes, &out.CurrentNodes
		*out = new(int32)
		**out = **in
	}
	if in.UpdatedNodes != nil {
		in, out := &in.UpdatedNodes, &out.UpdatedNodes
		*out = new(int32)
		**out = **in
	}
	if in.ReadyNodes != nil {
		in, out := &in.ReadyNodes, &out.ReadyNodes
		*out = new(int32)
		**out = **in
	}
	if in.AvailableNodes != nil {
		in, out := &in.AvailableNodes, &out.AvailableNodes
		*out = new(int32)
		**out = **in
	}
	if in.Racks != nil {
		in, out := &in.Racks, &out.Racks
		*out = make([]RackStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBDatacenterStatus.
func (in *ScyllaDBDatacenterStatus) DeepCopy() *ScyllaDBDatacenterStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBDatacenterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerAgent) DeepCopyInto(out *ScyllaDBManagerAgent) {
	*out = *in
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerAgent.
func (in *ScyllaDBManagerAgent) DeepCopy() *ScyllaDBManagerAgent {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerAgentTemplate) DeepCopyInto(out *ScyllaDBManagerAgentTemplate) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomConfigSecretRef != nil {
		in, out := &in.CustomConfigSecretRef, &out.CustomConfigSecretRef
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerAgentTemplate.
func (in *ScyllaDBManagerAgentTemplate) DeepCopy() *ScyllaDBManagerAgentTemplate {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerAgentTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerBackupTaskOptions) DeepCopyInto(out *ScyllaDBManagerBackupTaskOptions) {
	*out = *in
	in.ScyllaDBManagerTaskSchedule.DeepCopyInto(&out.ScyllaDBManagerTaskSchedule)
	if in.DC != nil {
		in, out := &in.DC, &out.DC
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Keyspace != nil {
		in, out := &in.Keyspace, &out.Keyspace
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Retention != nil {
		in, out := &in.Retention, &out.Retention
		*out = new(int64)
		**out = **in
	}
	if in.SnapshotParallel != nil {
		in, out := &in.SnapshotParallel, &out.SnapshotParallel
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.UploadParallel != nil {
		in, out := &in.UploadParallel, &out.UploadParallel
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerBackupTaskOptions.
func (in *ScyllaDBManagerBackupTaskOptions) DeepCopy() *ScyllaDBManagerBackupTaskOptions {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerBackupTaskOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerClusterRegistration) DeepCopyInto(out *ScyllaDBManagerClusterRegistration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerClusterRegistration.
func (in *ScyllaDBManagerClusterRegistration) DeepCopy() *ScyllaDBManagerClusterRegistration {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerClusterRegistration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBManagerClusterRegistration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerClusterRegistrationList) DeepCopyInto(out *ScyllaDBManagerClusterRegistrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaDBManagerClusterRegistration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerClusterRegistrationList.
func (in *ScyllaDBManagerClusterRegistrationList) DeepCopy() *ScyllaDBManagerClusterRegistrationList {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerClusterRegistrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBManagerClusterRegistrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerClusterRegistrationSpec) DeepCopyInto(out *ScyllaDBManagerClusterRegistrationSpec) {
	*out = *in
	out.ScyllaDBClusterRef = in.ScyllaDBClusterRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerClusterRegistrationSpec.
func (in *ScyllaDBManagerClusterRegistrationSpec) DeepCopy() *ScyllaDBManagerClusterRegistrationSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerClusterRegistrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerClusterRegistrationStatus) DeepCopyInto(out *ScyllaDBManagerClusterRegistrationStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerClusterRegistrationStatus.
func (in *ScyllaDBManagerClusterRegistrationStatus) DeepCopy() *ScyllaDBManagerClusterRegistrationStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerClusterRegistrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerRepairTaskOptions) DeepCopyInto(out *ScyllaDBManagerRepairTaskOptions) {
	*out = *in
	in.ScyllaDBManagerTaskSchedule.DeepCopyInto(&out.ScyllaDBManagerTaskSchedule)
	if in.DC != nil {
		in, out := &in.DC, &out.DC
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FailFast != nil {
		in, out := &in.FailFast, &out.FailFast
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.IgnoreDownHosts != nil {
		in, out := &in.IgnoreDownHosts, &out.IgnoreDownHosts
		*out = new(bool)
		**out = **in
	}
	if in.Intensity != nil {
		in, out := &in.Intensity, &out.Intensity
		*out = new(int64)
		**out = **in
	}
	if in.Keyspace != nil {
		in, out := &in.Keyspace, &out.Keyspace
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Parallel != nil {
		in, out := &in.Parallel, &out.Parallel
		*out = new(int64)
		**out = **in
	}
	if in.SmallTableThreshold != nil {
		in, out := &in.SmallTableThreshold, &out.SmallTableThreshold
		x := (*in).DeepCopy()
		*out = &x
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerRepairTaskOptions.
func (in *ScyllaDBManagerRepairTaskOptions) DeepCopy() *ScyllaDBManagerRepairTaskOptions {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerRepairTaskOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerTask) DeepCopyInto(out *ScyllaDBManagerTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerTask.
func (in *ScyllaDBManagerTask) DeepCopy() *ScyllaDBManagerTask {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBManagerTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerTaskList) DeepCopyInto(out *ScyllaDBManagerTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaDBManagerTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerTaskList.
func (in *ScyllaDBManagerTaskList) DeepCopy() *ScyllaDBManagerTaskList {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBManagerTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerTaskSchedule) DeepCopyInto(out *ScyllaDBManagerTaskSchedule) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(int64)
		**out = **in
	}
	if in.RetryWait != nil {
		in, out := &in.RetryWait, &out.RetryWait
		*out = new(metav1.Duration)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerTaskSchedule.
func (in *ScyllaDBManagerTaskSchedule) DeepCopy() *ScyllaDBManagerTaskSchedule {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerTaskSchedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerTaskSpec) DeepCopyInto(out *ScyllaDBManagerTaskSpec) {
	*out = *in
	out.ScyllaDBClusterRef = in.ScyllaDBClusterRef
	if in.Backup != nil {
		in, out := &in.Backup, &out.Backup
		*out = new(ScyllaDBManagerBackupTaskOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.Repair != nil {
		in, out := &in.Repair, &out.Repair
		*out = new(ScyllaDBManagerRepairTaskOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerTaskSpec.
func (in *ScyllaDBManagerTaskSpec) DeepCopy() *ScyllaDBManagerTaskSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBManagerTaskStatus) DeepCopyInto(out *ScyllaDBManagerTaskStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskID != nil {
		in, out := &in.TaskID, &out.TaskID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBManagerTaskStatus.
func (in *ScyllaDBManagerTaskStatus) DeepCopy() *ScyllaDBManagerTaskStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBManagerTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBMonitoring) DeepCopyInto(out *ScyllaDBMonitoring) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBMonitoring.
func (in *ScyllaDBMonitoring) DeepCopy() *ScyllaDBMonitoring {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBMonitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBMonitoring) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBMonitoringList) DeepCopyInto(out *ScyllaDBMonitoringList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaDBMonitoring, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBMonitoringList.
func (in *ScyllaDBMonitoringList) DeepCopy() *ScyllaDBMonitoringList {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBMonitoringList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaDBMonitoringList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBMonitoringSpec) DeepCopyInto(out *ScyllaDBMonitoringSpec) {
	*out = *in
	in.EndpointsSelector.DeepCopyInto(&out.EndpointsSelector)
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = new(Components)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(ScyllaDBMonitoringType)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBMonitoringSpec.
func (in *ScyllaDBMonitoringSpec) DeepCopy() *ScyllaDBMonitoringSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBMonitoringSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBMonitoringStatus) DeepCopyInto(out *ScyllaDBMonitoringStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBMonitoringStatus.
func (in *ScyllaDBMonitoringStatus) DeepCopy() *ScyllaDBMonitoringStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBMonitoringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaDBTemplate) DeepCopyInto(out *ScyllaDBTemplate) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.Storage != nil {
		in, out := &in.Storage, &out.Storage
		*out = new(StorageOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.CustomConfigMapRef != nil {
		in, out := &in.CustomConfigMapRef, &out.CustomConfigMapRef
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaDBTemplate.
func (in *ScyllaDBTemplate) DeepCopy() *ScyllaDBTemplate {
	if in == nil {
		return nil
	}
	out := new(ScyllaDBTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaOperatorConfig) DeepCopyInto(out *ScyllaOperatorConfig) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaOperatorConfig.
func (in *ScyllaOperatorConfig) DeepCopy() *ScyllaOperatorConfig {
	if in == nil {
		return nil
	}
	out := new(ScyllaOperatorConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaOperatorConfig) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaOperatorConfigList) DeepCopyInto(out *ScyllaOperatorConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ScyllaOperatorConfig, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaOperatorConfigList.
func (in *ScyllaOperatorConfigList) DeepCopy() *ScyllaOperatorConfigList {
	if in == nil {
		return nil
	}
	out := new(ScyllaOperatorConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScyllaOperatorConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaOperatorConfigSpec) DeepCopyInto(out *ScyllaOperatorConfigSpec) {
	*out = *in
	if in.UnsupportedBashToolsImageOverride != nil {
		in, out := &in.UnsupportedBashToolsImageOverride, &out.UnsupportedBashToolsImageOverride
		*out = new(string)
		**out = **in
	}
	if in.UnsupportedGrafanaImageOverride != nil {
		in, out := &in.UnsupportedGrafanaImageOverride, &out.UnsupportedGrafanaImageOverride
		*out = new(string)
		**out = **in
	}
	if in.UnsupportedPrometheusVersionOverride != nil {
		in, out := &in.UnsupportedPrometheusVersionOverride, &out.UnsupportedPrometheusVersionOverride
		*out = new(string)
		**out = **in
	}
	if in.ConfiguredClusterDomain != nil {
		in, out := &in.ConfiguredClusterDomain, &out.ConfiguredClusterDomain
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaOperatorConfigSpec.
func (in *ScyllaOperatorConfigSpec) DeepCopy() *ScyllaOperatorConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ScyllaOperatorConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScyllaOperatorConfigStatus) DeepCopyInto(out *ScyllaOperatorConfigStatus) {
	*out = *in
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int64)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ScyllaDBUtilsImage != nil {
		in, out := &in.ScyllaDBUtilsImage, &out.ScyllaDBUtilsImage
		*out = new(string)
		**out = **in
	}
	if in.BashToolsImage != nil {
		in, out := &in.BashToolsImage, &out.BashToolsImage
		*out = new(string)
		**out = **in
	}
	if in.GrafanaImage != nil {
		in, out := &in.GrafanaImage, &out.GrafanaImage
		*out = new(string)
		**out = **in
	}
	if in.PrometheusVersion != nil {
		in, out := &in.PrometheusVersion, &out.PrometheusVersion
		*out = new(string)
		**out = **in
	}
	if in.ClusterDomain != nil {
		in, out := &in.ClusterDomain, &out.ClusterDomain
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScyllaOperatorConfigStatus.
func (in *ScyllaOperatorConfigStatus) DeepCopy() *ScyllaOperatorConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ScyllaOperatorConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.VolumeClaimTemplate.DeepCopyInto(&out.VolumeClaimTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageOptions) DeepCopyInto(out *StorageOptions) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(ObjectTemplateMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageClassName != nil {
		in, out := &in.StorageClassName, &out.StorageClassName
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageOptions.
func (in *StorageOptions) DeepCopy() *StorageOptions {
	if in == nil {
		return nil
	}
	out := new(StorageOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSCertificate) DeepCopyInto(out *TLSCertificate) {
	*out = *in
	if in.UserManagedOptions != nil {
		in, out := &in.UserManagedOptions, &out.UserManagedOptions
		*out = new(UserManagedTLSCertificateOptions)
		**out = **in
	}
	if in.OperatorManagedOptions != nil {
		in, out := &in.OperatorManagedOptions, &out.OperatorManagedOptions
		*out = new(OperatorManagedTLSCertificateOptions)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSCertificate.
func (in *TLSCertificate) DeepCopy() *TLSCertificate {
	if in == nil {
		return nil
	}
	out := new(TLSCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserManagedTLSCertificateOptions) DeepCopyInto(out *UserManagedTLSCertificateOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserManagedTLSCertificateOptions.
func (in *UserManagedTLSCertificateOptions) DeepCopy() *UserManagedTLSCertificateOptions {
	if in == nil {
		return nil
	}
	out := new(UserManagedTLSCertificateOptions)
	in.DeepCopyInto(out)
	return out
}
