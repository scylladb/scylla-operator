// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/scylladb/scylla-operator/pkg/externalapi/monitoring/v1"
	monitoringv1 "github.com/scylladb/scylla-operator/pkg/externalclient/monitoring/clientset/versioned/typed/monitoring/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeAlertmanagers implements AlertmanagerInterface
type fakeAlertmanagers struct {
	*gentype.FakeClientWithList[*v1.Alertmanager, *v1.AlertmanagerList]
	Fake *FakeMonitoringV1
}

func newFakeAlertmanagers(fake *FakeMonitoringV1, namespace string) monitoringv1.AlertmanagerInterface {
	return &fakeAlertmanagers{
		gentype.NewFakeClientWithList[*v1.Alertmanager, *v1.AlertmanagerList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("alertmanagers"),
			v1.SchemeGroupVersion.WithKind("Alertmanager"),
			func() *v1.Alertmanager { return &v1.Alertmanager{} },
			func() *v1.AlertmanagerList { return &v1.AlertmanagerList{} },
			func(dst, src *v1.AlertmanagerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.AlertmanagerList) []*v1.Alertmanager { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.AlertmanagerList, items []*v1.Alertmanager) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
