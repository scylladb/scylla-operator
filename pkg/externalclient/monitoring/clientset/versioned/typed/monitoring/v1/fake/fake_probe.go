// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/scylladb/scylla-operator/pkg/externalapi/monitoring/v1"
	monitoringv1 "github.com/scylladb/scylla-operator/pkg/externalclient/monitoring/clientset/versioned/typed/monitoring/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeProbes implements ProbeInterface
type fakeProbes struct {
	*gentype.FakeClientWithList[*v1.Probe, *v1.ProbeList]
	Fake *FakeMonitoringV1
}

func newFakeProbes(fake *FakeMonitoringV1, namespace string) monitoringv1.ProbeInterface {
	return &fakeProbes{
		gentype.NewFakeClientWithList[*v1.Probe, *v1.ProbeList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("probes"),
			v1.SchemeGroupVersion.WithKind("Probe"),
			func() *v1.Probe { return &v1.Probe{} },
			func() *v1.ProbeList { return &v1.ProbeList{} },
			func(dst, src *v1.ProbeList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ProbeList) []*v1.Probe { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ProbeList, items []*v1.Probe) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
