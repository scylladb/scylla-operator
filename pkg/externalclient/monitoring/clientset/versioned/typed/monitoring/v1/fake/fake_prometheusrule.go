// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/scylladb/scylla-operator/pkg/externalapi/monitoring/v1"
	monitoringv1 "github.com/scylladb/scylla-operator/pkg/externalclient/monitoring/clientset/versioned/typed/monitoring/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakePrometheusRules implements PrometheusRuleInterface
type fakePrometheusRules struct {
	*gentype.FakeClientWithList[*v1.PrometheusRule, *v1.PrometheusRuleList]
	Fake *FakeMonitoringV1
}

func newFakePrometheusRules(fake *FakeMonitoringV1, namespace string) monitoringv1.PrometheusRuleInterface {
	return &fakePrometheusRules{
		gentype.NewFakeClientWithList[*v1.PrometheusRule, *v1.PrometheusRuleList](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("prometheusrules"),
			v1.SchemeGroupVersion.WithKind("PrometheusRule"),
			func() *v1.PrometheusRule { return &v1.PrometheusRule{} },
			func() *v1.PrometheusRuleList { return &v1.PrometheusRuleList{} },
			func(dst, src *v1.PrometheusRuleList) { dst.ListMeta = src.ListMeta },
			func(list *v1.PrometheusRuleList) []*v1.PrometheusRule { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.PrometheusRuleList, items []*v1.PrometheusRule) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
