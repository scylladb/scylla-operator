// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/scylladb/scylla-operator/pkg/managerclient/gen/models"
)

// GetClusterClusterIDTaskRepairTaskIDRunIDReader is a Reader for the GetClusterClusterIDTaskRepairTaskIDRunID structure.
type GetClusterClusterIDTaskRepairTaskIDRunIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterClusterIDTaskRepairTaskIDRunIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetClusterClusterIDTaskRepairTaskIDRunIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterClusterIDTaskRepairTaskIDRunIDOK creates a GetClusterClusterIDTaskRepairTaskIDRunIDOK with default headers values
func NewGetClusterClusterIDTaskRepairTaskIDRunIDOK() *GetClusterClusterIDTaskRepairTaskIDRunIDOK {
	return &GetClusterClusterIDTaskRepairTaskIDRunIDOK{}
}

/*
GetClusterClusterIDTaskRepairTaskIDRunIDOK describes a response with status code 200, with default header values.

Repair progress
*/
type GetClusterClusterIDTaskRepairTaskIDRunIDOK struct {
	Payload *models.TaskRunRepairProgress
}

// IsSuccess returns true when this get cluster cluster Id task repair task Id run Id o k response has a 2xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster cluster Id task repair task Id run Id o k response has a 3xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster cluster Id task repair task Id run Id o k response has a 4xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster cluster Id task repair task Id run Id o k response has a 5xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster cluster Id task repair task Id run Id o k response a status code equal to that given
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/task/repair/{task_id}/{run_id}][%d] getClusterClusterIdTaskRepairTaskIdRunIdOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) String() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/task/repair/{task_id}/{run_id}][%d] getClusterClusterIdTaskRepairTaskIdRunIdOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) GetPayload() *models.TaskRunRepairProgress {
	return o.Payload
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskRunRepairProgress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDTaskRepairTaskIDRunIDDefault creates a GetClusterClusterIDTaskRepairTaskIDRunIDDefault with default headers values
func NewGetClusterClusterIDTaskRepairTaskIDRunIDDefault(code int) *GetClusterClusterIDTaskRepairTaskIDRunIDDefault {
	return &GetClusterClusterIDTaskRepairTaskIDRunIDDefault{
		_statusCode: code,
	}
}

/*
GetClusterClusterIDTaskRepairTaskIDRunIDDefault describes a response with status code -1, with default header values.

Error
*/
type GetClusterClusterIDTaskRepairTaskIDRunIDDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get cluster cluster ID task repair task ID run ID default response
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this get cluster cluster ID task repair task ID run ID default response has a 2xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get cluster cluster ID task repair task ID run ID default response has a 3xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get cluster cluster ID task repair task ID run ID default response has a 4xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get cluster cluster ID task repair task ID run ID default response has a 5xx status code
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get cluster cluster ID task repair task ID run ID default response a status code equal to that given
func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/task/repair/{task_id}/{run_id}][%d] GetClusterClusterIDTaskRepairTaskIDRunID default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) String() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/task/repair/{task_id}/{run_id}][%d] GetClusterClusterIDTaskRepairTaskIDRunID default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDTaskRepairTaskIDRunIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
