// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"
	"strings"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/scylla-operator/pkg/scyllaclient/internal/agent/models"
)

// OperationsCheckPermissionsReader is a Reader for the OperationsCheckPermissions structure.
type OperationsCheckPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperationsCheckPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOperationsCheckPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewOperationsCheckPermissionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewOperationsCheckPermissionsOK creates a OperationsCheckPermissionsOK with default headers values
func NewOperationsCheckPermissionsOK() *OperationsCheckPermissionsOK {
	return &OperationsCheckPermissionsOK{}
}

/*
OperationsCheckPermissionsOK handles this case with default header values.

Empty object
*/
type OperationsCheckPermissionsOK struct {
	Payload interface{}
	JobID   int64
}

func (o *OperationsCheckPermissionsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OperationsCheckPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	if jobIDHeader := response.GetHeader("x-rclone-jobid"); jobIDHeader != "" {
		jobID, err := strconv.ParseInt(jobIDHeader, 10, 64)
		if err != nil {
			return err
		}

		o.JobID = jobID
	}
	return nil
}

// NewOperationsCheckPermissionsDefault creates a OperationsCheckPermissionsDefault with default headers values
func NewOperationsCheckPermissionsDefault(code int) *OperationsCheckPermissionsDefault {
	return &OperationsCheckPermissionsDefault{
		_statusCode: code,
	}
}

/*
OperationsCheckPermissionsDefault handles this case with default header values.

Server error
*/
type OperationsCheckPermissionsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
	JobID   int64
}

// Code gets the status code for the operations check permissions default response
func (o *OperationsCheckPermissionsDefault) Code() int {
	return o._statusCode
}

func (o *OperationsCheckPermissionsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *OperationsCheckPermissionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	if jobIDHeader := response.GetHeader("x-rclone-jobid"); jobIDHeader != "" {
		jobID, err := strconv.ParseInt(jobIDHeader, 10, 64)
		if err != nil {
			return err
		}

		o.JobID = jobID
	}
	return nil
}

func (o *OperationsCheckPermissionsDefault) Error() string {
	return fmt.Sprintf("agent [HTTP %d] %s", o._statusCode, strings.TrimRight(o.Payload.Message, "."))
}
