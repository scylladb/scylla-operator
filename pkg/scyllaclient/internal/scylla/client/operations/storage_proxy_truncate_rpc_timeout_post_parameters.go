// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewStorageProxyTruncateRPCTimeoutPostParams creates a new StorageProxyTruncateRPCTimeoutPostParams object
// with the default values initialized.
func NewStorageProxyTruncateRPCTimeoutPostParams() *StorageProxyTruncateRPCTimeoutPostParams {
	var ()
	return &StorageProxyTruncateRPCTimeoutPostParams{

		requestTimeout: cr.DefaultTimeout,
	}
}

// NewStorageProxyTruncateRPCTimeoutPostParamsWithTimeout creates a new StorageProxyTruncateRPCTimeoutPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStorageProxyTruncateRPCTimeoutPostParamsWithTimeout(timeout time.Duration) *StorageProxyTruncateRPCTimeoutPostParams {
	var ()
	return &StorageProxyTruncateRPCTimeoutPostParams{

		requestTimeout: timeout,
	}
}

// NewStorageProxyTruncateRPCTimeoutPostParamsWithContext creates a new StorageProxyTruncateRPCTimeoutPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewStorageProxyTruncateRPCTimeoutPostParamsWithContext(ctx context.Context) *StorageProxyTruncateRPCTimeoutPostParams {
	var ()
	return &StorageProxyTruncateRPCTimeoutPostParams{

		Context: ctx,
	}
}

// NewStorageProxyTruncateRPCTimeoutPostParamsWithHTTPClient creates a new StorageProxyTruncateRPCTimeoutPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStorageProxyTruncateRPCTimeoutPostParamsWithHTTPClient(client *http.Client) *StorageProxyTruncateRPCTimeoutPostParams {
	var ()
	return &StorageProxyTruncateRPCTimeoutPostParams{
		HTTPClient: client,
	}
}

/*
StorageProxyTruncateRPCTimeoutPostParams contains all the parameters to send to the API endpoint
for the storage proxy truncate Rpc timeout post operation typically these are written to a http.Request
*/
type StorageProxyTruncateRPCTimeoutPostParams struct {

	/*Timeout
	  timeout in second

	*/
	Timeout string

	requestTimeout time.Duration
	Context        context.Context
	HTTPClient     *http.Client
}

// WithRequestTimeout adds the timeout to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) WithRequestTimeout(timeout time.Duration) *StorageProxyTruncateRPCTimeoutPostParams {
	o.SetRequestTimeout(timeout)
	return o
}

// SetRequestTimeout adds the timeout to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) SetRequestTimeout(timeout time.Duration) {
	o.requestTimeout = timeout
}

// WithContext adds the context to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) WithContext(ctx context.Context) *StorageProxyTruncateRPCTimeoutPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) WithHTTPClient(client *http.Client) *StorageProxyTruncateRPCTimeoutPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTimeout adds the timeout to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) WithTimeout(timeout string) *StorageProxyTruncateRPCTimeoutPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage proxy truncate Rpc timeout post params
func (o *StorageProxyTruncateRPCTimeoutPostParams) SetTimeout(timeout string) {
	o.Timeout = timeout
}

// WriteToRequest writes these params to a swagger request
func (o *StorageProxyTruncateRPCTimeoutPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.requestTimeout); err != nil {
		return err
	}
	var res []error

	// query param timeout
	qrTimeout := o.Timeout
	qTimeout := qrTimeout
	if qTimeout != "" {
		if err := r.SetQueryParam("timeout", qTimeout); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
