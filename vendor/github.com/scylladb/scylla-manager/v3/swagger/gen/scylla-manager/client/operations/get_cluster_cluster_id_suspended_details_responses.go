// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/scylladb/scylla-manager/v3/swagger/gen/scylla-manager/models"
)

// GetClusterClusterIDSuspendedDetailsReader is a Reader for the GetClusterClusterIDSuspendedDetails structure.
type GetClusterClusterIDSuspendedDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterClusterIDSuspendedDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterClusterIDSuspendedDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetClusterClusterIDSuspendedDetailsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterClusterIDSuspendedDetailsOK creates a GetClusterClusterIDSuspendedDetailsOK with default headers values
func NewGetClusterClusterIDSuspendedDetailsOK() *GetClusterClusterIDSuspendedDetailsOK {
	return &GetClusterClusterIDSuspendedDetailsOK{}
}

/*
GetClusterClusterIDSuspendedDetailsOK handles this case with default header values.

OK
*/
type GetClusterClusterIDSuspendedDetailsOK struct {
	Payload *models.SuspendDetails
}

func (o *GetClusterClusterIDSuspendedDetailsOK) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/suspended/details][%d] getClusterClusterIdSuspendedDetailsOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDSuspendedDetailsOK) GetPayload() *models.SuspendDetails {
	return o.Payload
}

func (o *GetClusterClusterIDSuspendedDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuspendDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDSuspendedDetailsDefault creates a GetClusterClusterIDSuspendedDetailsDefault with default headers values
func NewGetClusterClusterIDSuspendedDetailsDefault(code int) *GetClusterClusterIDSuspendedDetailsDefault {
	return &GetClusterClusterIDSuspendedDetailsDefault{
		_statusCode: code,
	}
}

/*
GetClusterClusterIDSuspendedDetailsDefault handles this case with default header values.

Error
*/
type GetClusterClusterIDSuspendedDetailsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get cluster cluster ID suspended details default response
func (o *GetClusterClusterIDSuspendedDetailsDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterClusterIDSuspendedDetailsDefault) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/suspended/details][%d] GetClusterClusterIDSuspendedDetails default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterClusterIDSuspendedDetailsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDSuspendedDetailsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
