// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// One2OneRestoreViewProgress one2 one restore view progress
//
// swagger:model One2OneRestoreViewProgress
type One2OneRestoreViewProgress struct {

	// completed at
	// Format: date-time
	CompletedAt *strfmt.DateTime `json:"completed_at,omitempty"`

	// keyspace
	Keyspace string `json:"keyspace,omitempty"`

	// restored
	Restored int64 `json:"restored,omitempty"`

	// size
	Size int64 `json:"size,omitempty"`

	// started at
	// Format: date-time
	StartedAt *strfmt.DateTime `json:"started_at,omitempty"`

	// status
	// Enum: [not_started in_progress done failed]
	Status string `json:"status,omitempty"`

	// table
	Table string `json:"table,omitempty"`

	// view
	View string `json:"view,omitempty"`

	// view type
	ViewType string `json:"view_type,omitempty"`
}

// Validate validates this one2 one restore view progress
func (m *One2OneRestoreViewProgress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCompletedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *One2OneRestoreViewProgress) validateCompletedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.CompletedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("completed_at", "body", "date-time", m.CompletedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *One2OneRestoreViewProgress) validateStartedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.StartedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("started_at", "body", "date-time", m.StartedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

var one2OneRestoreViewProgressTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["not_started","in_progress","done","failed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		one2OneRestoreViewProgressTypeStatusPropEnum = append(one2OneRestoreViewProgressTypeStatusPropEnum, v)
	}
}

const (

	// One2OneRestoreViewProgressStatusNotStarted captures enum value "not_started"
	One2OneRestoreViewProgressStatusNotStarted string = "not_started"

	// One2OneRestoreViewProgressStatusInProgress captures enum value "in_progress"
	One2OneRestoreViewProgressStatusInProgress string = "in_progress"

	// One2OneRestoreViewProgressStatusDone captures enum value "done"
	One2OneRestoreViewProgressStatusDone string = "done"

	// One2OneRestoreViewProgressStatusFailed captures enum value "failed"
	One2OneRestoreViewProgressStatusFailed string = "failed"
)

// prop value enum
func (m *One2OneRestoreViewProgress) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, one2OneRestoreViewProgressTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *One2OneRestoreViewProgress) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *One2OneRestoreViewProgress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *One2OneRestoreViewProgress) UnmarshalBinary(b []byte) error {
	var res One2OneRestoreViewProgress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
